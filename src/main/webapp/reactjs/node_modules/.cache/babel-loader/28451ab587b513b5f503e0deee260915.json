{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Valentin\\\\new_js\\\\spring-boot-security-postgresql-master\\\\src\\\\main\\\\webapp\\\\reactjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Valentin\\\\new_js\\\\spring-boot-security-postgresql-master\\\\src\\\\main\\\\webapp\\\\reactjs\\\\src\\\\App.js\";\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Login from './components/Login';\nimport Login1 from './components/login1';\nimport Register from \"./components/register\";\nimport useToken from './components/useToken';\n\nfunction App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      examples = _useState2[0],\n      setExamples = _useState2[1];\n\n  var _useToken = useToken(),\n      token = _useToken.token,\n      setToken = _useToken.setToken;\n\n  useLayoutEffect(function () {\n    getExamples();\n  });\n\n  function getExamples() {\n    fetch('http://localhost:8083/api/examples/', {\n      headers: {\n        'Authorization': token\n      }\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      setExamples(data);\n    });\n  }\n\n  function createExample() {\n    var exampleText = prompt('Enter text');\n    fetch('http://localhost:8083/api/examples/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify({\n        exampleText: exampleText\n      })\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      alert(data);\n      getExamples();\n    });\n  }\n\n  function deleteExample() {\n    var id = prompt('Enter example ID');\n    fetch(\"http://localhost:8083/api/examples/\".concat(id), {\n      method: 'DELETE',\n      headers: {\n        'Authorization': token\n      }\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      alert(data);\n      getExamples();\n    });\n  }\n\n  function updateExample() {\n    var id = prompt('Enter example ID');\n    var exampleText = prompt('Enter new text');\n    fetch('http://localhost:8083/api/examples/', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify({\n        id: id,\n        exampleText: exampleText\n      })\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      alert(data);\n      getExamples();\n    });\n  }\n\n  if (!token) {\n    return /*#__PURE__*/React.createElement(Login, {\n      setToken: setToken,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, examples, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createExample,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Add example\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: deleteExample,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Delete example\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: updateExample,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Update example\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Valentin/new_js/spring-boot-security-postgresql-master/src/main/webapp/reactjs/src/App.js"],"names":["React","useEffect","useLayoutEffect","useRef","useState","BrowserRouter","Route","Routes","Login","Login1","Register","useToken","App","examples","setExamples","token","setToken","getExamples","fetch","headers","then","response","text","data","createExample","exampleText","prompt","method","body","JSON","stringify","alert","deleteExample","id","updateExample"],"mappings":"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","sourcesContent":["import React, {useEffect, useLayoutEffect, useRef, useState} from 'react';\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport Login from './components/Login';\n\nimport Login1 from './components/login1';\nimport Register from \"./components/register\";\nimport useToken from './components/useToken';\n\n\n\n\nfunction App() {\n    const [examples, setExamples] = useState(true);\n\n    const { token, setToken } = useToken();\n\n    useLayoutEffect(() => {\n        getExamples();\n    });\n\n    function getExamples() {\n        fetch('http://localhost:8083/api/examples/', {\n            headers: {\n                'Authorization': token\n            }\n        })\n            .then(response => {\n                return response.text();\n            })\n            .then(data => {\n                setExamples(data);\n            });\n    }\n\n    function createExample() {\n        let exampleText = prompt('Enter text');\n        fetch('http://localhost:8083/api/examples/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n            },\n            body: JSON.stringify({exampleText}),\n        })\n            .then(response => {\n                return response.text();\n            })\n            .then(data => {\n                alert(data);\n                getExamples();\n            });\n    }\n\n    function deleteExample() {\n        let id = prompt('Enter example ID');\n        fetch(`http://localhost:8083/api/examples/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': token\n            }\n        })\n            .then(response => {\n                return response.text();\n            })\n            .then(data => {\n                alert(data);\n                getExamples();\n            });\n    }\n\n    function updateExample() {\n        let id = prompt('Enter example ID');\n        let exampleText = prompt('Enter new text');\n        fetch('http://localhost:8083/api/examples/', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n            },\n            body: JSON.stringify({\n                id,\n                exampleText\n            }),\n        })\n            .then(response => {\n                return response.text();\n            })\n            .then(data => {\n                alert(data);\n                getExamples();\n            });\n    }\n\n\n    if(!token) {\n        return <Login setToken={setToken}/>\n    }\n\n    return (\n\n        <div>\n\n\n            {/*<table>*/}\n            {/*  <thead>*/}\n            {/*    <tr>*/}\n            {/*      <th>Id</th>*/}\n            {/*      <th>Text</th>*/}\n            {/*    </tr>*/}\n            {/*  </thead>*/}\n            {/*  <tbody>*/}\n            {/*    {JSON.parse(examples).map(item =>*/}\n            {/*      <tr>*/}\n            {/*        <td>{item.id}</td>*/}\n            {/*        <td>{item.exampleText}</td>*/}\n            {/*      </tr>)}*/}\n            {/*  </tbody>*/}\n            {/*</table>*/}\n            {examples}\n            <br />\n            <button onClick={createExample}>Add example</button>\n            <br />\n            <button onClick={deleteExample}>Delete example</button>\n            <br />\n            <button onClick={updateExample}>Update example</button>\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}