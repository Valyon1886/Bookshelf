{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Valentin\\\\new_js\\\\spring-boot-security-postgresql-master\\\\src\\\\main\\\\webapp\\\\reactjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Valentin\\\\new_js\\\\spring-boot-security-postgresql-master\\\\src\\\\main\\\\webapp\\\\reactjs\\\\src\\\\components\\\\content.js\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport useToken from \"./useToken\";\nimport Login from \"./Login\";\nimport App from \"../App\";\n\nfunction Content() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useToken = useToken(),\n      token = _useToken.token,\n      setToken = _useToken.setToken;\n\n  useLayoutEffect(function () {\n    getBooks();\n  });\n\n  function getBooks() {\n    fetch('http://localhost:8083/api/books/', {\n      headers: {\n        'Authorization': token\n      }\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      setBooks(data);\n    });\n  }\n\n  function createBook() {\n    var bookText = prompt('Enter text');\n    fetch('http://localhost:8083/api/books/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify({})\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      alert(data);\n      getBooks();\n    });\n  }\n\n  function deleteBook() {\n    var id = prompt('Enter book ID');\n    fetch(\"http://localhost:8083/api/books/\".concat(id), {\n      method: 'DELETE',\n      headers: {\n        'Authorization': token\n      }\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      alert(data);\n      getBooks();\n    });\n  }\n\n  function updateBook() {\n    var id = prompt('Enter book ID');\n    var bookText = prompt('Enter new text');\n    fetch('http://localhost:8083/api/books/', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify({\n        id: id,\n        book_name: book_name\n      })\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      alert(data);\n      getBooks();\n    });\n  } // if(!token) {\n  //     return <Login setToken={setToken}/>\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, books, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Add book\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: deleteBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Delete book\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: updateBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Update book\"));\n}\n\nexport default Content;","map":{"version":3,"sources":["C:/Users/Valentin/new_js/spring-boot-security-postgresql-master/src/main/webapp/reactjs/src/components/content.js"],"names":["React","useLayoutEffect","useState","useToken","Login","App","Content","books","setBooks","token","setToken","getBooks","fetch","headers","then","response","text","data","createBook","bookText","prompt","method","body","JSON","stringify","alert","deleteBook","id","updateBook","book_name"],"mappings":"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","sourcesContent":["import React, {useLayoutEffect, useState} from \"react\";\r\nimport useToken from \"./useToken\";\r\nimport Login from \"./Login\";\r\nimport App from \"../App\";\r\n\r\nfunction Content() {\r\n    const [books, setBooks] = useState(true);\r\n\r\n    const { token, setToken } = useToken();\r\n\r\n    useLayoutEffect(() => {\r\n        getBooks();\r\n    });\r\n\r\n    function getBooks() {\r\n        fetch('http://localhost:8083/api/books/', {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                setBooks(data);\r\n            });\r\n    }\r\n\r\n    function createBook() {\r\n        let bookText = prompt('Enter text');\r\n        fetch('http://localhost:8083/api/books/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify({}),\r\n        })\r\n            .then(response => {\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                alert(data);\r\n                getBooks();\r\n            });\r\n    }\r\n\r\n    function deleteBook() {\r\n        let id = prompt('Enter book ID');\r\n        fetch(`http://localhost:8083/api/books/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                alert(data);\r\n                getBooks();\r\n            });\r\n    }\r\n\r\n    function updateBook() {\r\n        let id = prompt('Enter book ID');\r\n        let bookText = prompt('Enter new text');\r\n        fetch('http://localhost:8083/api/books/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                book_name\r\n            }),\r\n        })\r\n            .then(response => {\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                alert(data);\r\n                getBooks();\r\n            });\r\n    }\r\n    // if(!token) {\r\n    //     return <Login setToken={setToken}/>\r\n    // }\r\n    return (\r\n\r\n        <div>\r\n\r\n\r\n            {/*<table>*/}\r\n            {/*  <thead>*/}\r\n            {/*    <tr>*/}\r\n            {/*      <th>Id</th>*/}\r\n            {/*      <th>Text</th>*/}\r\n            {/*    </tr>*/}\r\n            {/*  </thead>*/}\r\n            {/*  <tbody>*/}\r\n            {/*    {JSON.parse(books).map(item =>*/}\r\n            {/*      <tr>*/}\r\n            {/*        <td>{item.id}</td>*/}\r\n            {/*        <td>{item.bookText}</td>*/}\r\n            {/*      </tr>)}*/}\r\n            {/*  </tbody>*/}\r\n            {/*</table>*/}\r\n            {books}\r\n            <br />\r\n            <button onClick={createBook}>Add book</button>\r\n            <br />\r\n            <button onClick={deleteBook}>Delete book</button>\r\n            <br />\r\n            <button onClick={updateBook}>Update book</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;"]},"metadata":{},"sourceType":"module"}