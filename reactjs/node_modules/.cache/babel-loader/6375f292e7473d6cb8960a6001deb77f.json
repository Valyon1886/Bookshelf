{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Valentin\\\\new_js\\\\spring-boot-security-postgresql-master\\\\src\\\\main\\\\webapp\\\\reactjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Valentin\\\\new_js\\\\spring-boot-security-postgresql-master\\\\src\\\\main\\\\webapp\\\\reactjs\\\\src\\\\components\\\\content.js\";\nimport React, { Component, Fragment, useEffect, useLayoutEffect, useState } from \"react\";\nimport useToken from \"./useToken\";\nimport \"./all.module.css\";\nimport classes from \"./all.module.css\";\n\nfunction Content() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useToken = useToken(),\n      token = _useToken.token,\n      setToken = _useToken.setToken;\n\n  useLayoutEffect(function () {\n    getBooks();\n  });\n\n  function getBooks() {\n    fetch('http://localhost:8083/api/books/', {\n      headers: {\n        'Authorization': token\n      }\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      setBooks(data);\n    });\n  }\n\n  function createBook() {\n    var bookName = prompt('Enter text');\n    var amount = prompt('Enter amount'); //\n\n    fetch('http://localhost:8083/api/books/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify({\n        bookName: bookName,\n        amount: amount\n      })\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      alert(data);\n      getBooks();\n    });\n  }\n\n  function deleteBook() {\n    var id = prompt('Enter book ID');\n    fetch(\"http://localhost:8083/api/books/\".concat(id), {\n      method: 'DELETE',\n      headers: {\n        'Authorization': token\n      }\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      alert(data);\n      getBooks();\n    });\n  }\n\n  function updateBook() {\n    var id = prompt('Enter book ID');\n    var bookName = prompt('Enter new text');\n    var amount = prompt('Enter new amount'); //\n\n    fetch('http://localhost:8083/api/books/', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify({\n        id: id,\n        bookName: bookName,\n        amount: amount\n      })\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      alert(data);\n      getBooks();\n    });\n  }\n\n  function updateAmount(id, bookName, amount) {\n    // alert(f);\n    // alert(id);\n    // alert(bookName);\n    amount = Number(amount) - 1;\n    fetch('http://localhost:8083/api/books/amount', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify({\n        id: id,\n        bookName: bookName,\n        amount: amount\n      })\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      getBooks();\n    });\n  }\n\n  function updateAmound(id, bookName, amount) {\n    // alert(f);\n    // alert(id);\n    // alert(bookName);\n    amount = Number(amount) + 1;\n    fetch('http://localhost:8083/api/books/amount', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify({\n        id: id,\n        bookName: bookName,\n        amount: amount\n      })\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      getBooks();\n    });\n  } // if(!token) {\n  //     return <Login setToken={setToken}/>\n  // }\n  //var booki = (JSON.parse(books));\n  //console.log(booki);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table  text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, \"Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, \"Book name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, \"Amount\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, Object.values(JSON.parse(books)).map(function (book) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }, book.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }, book.bookName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }, book.amount), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn \".concat(classes.button1),\n      onClick: updateAmount.bind(0, book.id, book.bookName, book.amount),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }, \"Take book\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn \".concat(classes.button2),\n      onClick: updateAmound.bind(0, book.id, book.bookName, book.amount),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, \"Return book\")));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center \".concat(classes.mask),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary \".concat(classes.mask),\n    onClick: createBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, \"Add book\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary \".concat(classes.mask),\n    onClick: deleteBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, \"Delete book\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary \".concat(classes.mask),\n    onClick: updateBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, \"Update book\")));\n}\n\nexport default Content;","map":{"version":3,"sources":["C:/Users/Valentin/new_js/spring-boot-security-postgresql-master/src/main/webapp/reactjs/src/components/content.js"],"names":["React","Component","Fragment","useEffect","useLayoutEffect","useState","useToken","classes","Content","books","setBooks","token","setToken","getBooks","fetch","headers","then","response","text","data","createBook","bookName","prompt","amount","method","body","JSON","stringify","alert","deleteBook","id","updateBook","updateAmount","Number","updateAmound","Object","values","parse","map","book","button1","bind","button2","mask"],"mappings":"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","sourcesContent":["import React, {Component, Fragment, useEffect, useLayoutEffect, useState} from \"react\";\r\nimport useToken from \"./useToken\";\r\nimport \"./all.module.css\";\r\nimport classes from \"./all.module.css\";\r\n\r\nfunction Content() {\r\n    const [books, setBooks] = useState(true);\r\n    const {token, setToken} = useToken();\r\n\r\n    useLayoutEffect(() => {\r\n        getBooks();\r\n    });\r\n\r\n    function getBooks() {\r\n        fetch('http://localhost:8083/api/books/', {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                setBooks(data);\r\n            });\r\n    }\r\n\r\n    function createBook() {\r\n        let bookName = prompt('Enter text');\r\n        let amount = prompt('Enter amount');//\r\n        fetch('http://localhost:8083/api/books/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify({bookName, amount}),\r\n        })\r\n            .then(response => {\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                alert(data);\r\n                getBooks();\r\n            });\r\n    }\r\n\r\n    function deleteBook() {\r\n        let id = prompt('Enter book ID');\r\n        fetch(`http://localhost:8083/api/books/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                alert(data);\r\n                getBooks();\r\n            });\r\n    }\r\n\r\n    function updateBook() {\r\n        let id = prompt('Enter book ID');\r\n        let bookName = prompt('Enter new text');\r\n        let amount = prompt('Enter new amount');//\r\n        fetch('http://localhost:8083/api/books/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                bookName,\r\n                amount\r\n            }),\r\n        })\r\n            .then(response => {\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                alert(data);\r\n                getBooks();\r\n            });\r\n    }\r\n\r\n    function updateAmount(id, bookName, amount) {\r\n        // alert(f);\r\n        // alert(id);\r\n        // alert(bookName);\r\n        amount = Number(amount) - 1;\r\n        fetch('http://localhost:8083/api/books/amount', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                bookName,\r\n                amount\r\n            }),\r\n        })\r\n            .then(response => {\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                getBooks();\r\n            });\r\n    }\r\n\r\n    function updateAmound(id, bookName, amount) {\r\n        // alert(f);\r\n        // alert(id);\r\n        // alert(bookName);\r\n        amount = Number(amount) + 1;\r\n        fetch('http://localhost:8083/api/books/amount', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                bookName,\r\n                amount\r\n            }),\r\n        })\r\n            .then(response => {\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                getBooks();\r\n            });\r\n    }\r\n\r\n    // if(!token) {\r\n    //     return <Login setToken={setToken}/>\r\n    // }\r\n\r\n    //var booki = (JSON.parse(books));\r\n\r\n    //console.log(booki);\r\n\r\n\r\n        return (\r\n\r\n            <div>\r\n                <table className=\"table  text-center\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Book name</th>\r\n                        <th>Amount</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {Object.values(JSON.parse(books)).map(book =>\r\n                        <tr>\r\n                            <td>{book.id}</td>\r\n                            <td>{book.bookName}</td>\r\n                            <td>{book.amount}</td>\r\n                            <td><button className={`btn ${classes.button1}`} onClick={updateAmount.bind(0, book.id, book.bookName, book.amount)}>Take book</button></td>\r\n                            <td><button className={`btn ${classes.button2}`} onClick={updateAmound.bind(0, book.id, book.bookName, book.amount)}>Return book</button></td>\r\n                        </tr>)}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div className={`text-center ${classes.mask}`}>\r\n                    <button className={`btn btn-primary ${classes.mask}`} onClick={createBook}>Add book</button>\r\n\r\n                    <button className={`btn btn-primary ${classes.mask}`} onClick={deleteBook}>Delete book</button>\r\n\r\n                    <button className={`btn btn-primary ${classes.mask}`} onClick={updateBook}>Update book</button>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n}\r\n\r\nexport default Content;"]},"metadata":{},"sourceType":"module"}