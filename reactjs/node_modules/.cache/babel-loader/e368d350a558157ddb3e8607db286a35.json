{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Valentin\\\\new_js\\\\spring-boot-security-postgresql-master\\\\src\\\\main\\\\webapp\\\\reactjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Valentin\\\\new_js\\\\spring-boot-security-postgresql-master\\\\src\\\\main\\\\webapp\\\\reactjs\\\\src\\\\App.js\";\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Login from './components/Login';\nimport Login1 from './components/login1';\nimport Register from \"./components/register\";\nimport useToken from './components/useToken';\n\nfunction App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  console.log(token); // if (!token) {\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/*\",\n    element: /*#__PURE__*/React.createElement(Login1, {\n      setToken: setToken,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 55\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    element: /*#__PURE__*/React.createElement(Register, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 62\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }\n  }))))); // }\n  // return (\n  //     <div className=\"App\">\n  //         <header className=\"App-header\">\n  //             <Provider store={store}>\n  //                 <BrowserRouter>\n  //                     <Header/>\n  //                     <Routes>\n  //                         <Route path=\"/\" element={<Home quote={\"Starting page!\"}/>}/>\n  //                         <Route path=\"/home\" element={<Home quote={\"Groove street, home...\"}/>}/>\n  //                         <Route path=\"/about\" element={<About/>}/>\n  //                         <Route path=\"/dialogs\" element={<Dialogs/>}/>\n  //                         <Route path=\"/dialogs/0\" element={<DialogConversation id={0}/>}/>\n  //                         <Route path=\"/dialogs/1\" element={<DialogConversation id={1}/>}/>\n  //                         <Route path=\"/dialogs/2\" element={<DialogConversation id={2}/>}/>\n  //                         <Route path=\"/dialogs/3\" element={<DialogConversation id={3}/>}/>\n  //                         <Route path=\"/agreement\" element={<LicenseAgreement/>}/>\n  //                         <Route path=\"/items\" element={<Items/>}/>\n  //                     </Routes>\n  //                     <Footer/>\n  //                 </BrowserRouter>\n  //             </Provider>\n  //         </header>\n  //     </div>\n  // );\n} // function App() {\n//     const [examples, setExamples] = useState(true);\n//\n//     const { token, setToken } = useToken();\n//\n//     useLayoutEffect(() => {\n//         getExamples();\n//     });\n//\n//     function getExamples() {\n//         fetch('http://localhost:8083/api/examples/', {\n//             headers: {\n//                 'Authorization': token\n//             }\n//         })\n//             .then(response => {\n//                 return response.text();\n//             })\n//             .then(data => {\n//                 setExamples(data);\n//             });\n//     }\n//\n//     function createExample() {\n//         let exampleText = prompt('Enter text');\n//         fetch('http://localhost:8083/api/examples/', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': token\n//             },\n//             body: JSON.stringify({exampleText}),\n//         })\n//             .then(response => {\n//                 return response.text();\n//             })\n//             .then(data => {\n//                 alert(data);\n//                 getExamples();\n//             });\n//     }\n//\n//     function deleteExample() {\n//         let id = prompt('Enter example ID');\n//         fetch(`http://localhost:8083/api/examples/${id}`, {\n//             method: 'DELETE',\n//             headers: {\n//                 'Authorization': token\n//             }\n//         })\n//             .then(response => {\n//                 return response.text();\n//             })\n//             .then(data => {\n//                 alert(data);\n//                 getExamples();\n//             });\n//     }\n//\n//     function updateExample() {\n//         let id = prompt('Enter example ID');\n//         let exampleText = prompt('Enter new text');\n//         fetch('http://localhost:8083/api/examples/', {\n//             method: 'PUT',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': token\n//             },\n//             body: JSON.stringify({\n//                 id,\n//                 exampleText\n//             }),\n//         })\n//             .then(response => {\n//                 return response.text();\n//             })\n//             .then(data => {\n//                 alert(data);\n//                 getExamples();\n//             });\n//     }\n//\n//\n//     if(!token) {\n//         return <Login setToken={setToken}/>\n//     }\n//\n//     return (\n//\n//         <div>\n//\n//\n//             {/*<table>*/}\n//             {/*  <thead>*/}\n//             {/*    <tr>*/}\n//             {/*      <th>Id</th>*/}\n//             {/*      <th>Text</th>*/}\n//             {/*    </tr>*/}\n//             {/*  </thead>*/}\n//             {/*  <tbody>*/}\n//             {/*    {JSON.parse(examples).map(item =>*/}\n//             {/*      <tr>*/}\n//             {/*        <td>{item.id}</td>*/}\n//             {/*        <td>{item.exampleText}</td>*/}\n//             {/*      </tr>)}*/}\n//             {/*  </tbody>*/}\n//             {/*</table>*/}\n//             {examples}\n//             <br />\n//             <button onClick={createExample}>Add example</button>\n//             <br />\n//             <button onClick={deleteExample}>Delete example</button>\n//             <br />\n//             <button onClick={updateExample}>Update example</button>\n//         </div>\n//     );\n// }\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Valentin/new_js/spring-boot-security-postgresql-master/src/main/webapp/reactjs/src/App.js"],"names":["React","useEffect","useLayoutEffect","useRef","useState","BrowserRouter","Route","Routes","Login","Login1","Register","useToken","App","token","setToken","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,eAA1B,EAA2CC,MAA3C,EAAmDC,QAAnD,QAAkE,OAAlE;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,QAA2C,kBAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAGA,SAASC,GAAT,GAAe;AAAA,kBACeR,QAAQ,CAAC,IAAD,CADvB;AAAA;AAAA,MACJS,KADI;AAAA,MACGC,QADH;;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAFW,CAGX;;AACI,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAiB,IAAA,OAAO,eAAE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,OAAO,eAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADJ,CADJ,CADJ,CAJO,CAieAAeF,GAAf","sourcesContent":["import React, {useEffect, useLayoutEffect, useRef, useState} from 'react';\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport Login from './components/Login';\n\nimport Login1 from './components/login1';\nimport Register from \"./components/register\";\nimport useToken from './components/useToken';\n\n\nfunction App() {\n    const [token, setToken] = useState(null);\n    console.log(token);\n    // if (!token) {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <BrowserRouter>\n                        {/*<LHeader/>*/}\n                        <Routes>\n                            <Route path=\"/*\" element={<Login1 setToken={setToken}/>}/>\n                            <Route path=\"/register\" element={<Register/>}/>\n                        </Routes>\n                        {/*<Footer/>*/}\n                    </BrowserRouter>\n                </header>\n            </div>)\n    // }\n    // return (\n    //     <div className=\"App\">\n    //         <header className=\"App-header\">\n    //             <Provider store={store}>\n    //                 <BrowserRouter>\n    //                     <Header/>\n    //                     <Routes>\n    //                         <Route path=\"/\" element={<Home quote={\"Starting page!\"}/>}/>\n    //                         <Route path=\"/home\" element={<Home quote={\"Groove street, home...\"}/>}/>\n    //                         <Route path=\"/about\" element={<About/>}/>\n    //                         <Route path=\"/dialogs\" element={<Dialogs/>}/>\n    //                         <Route path=\"/dialogs/0\" element={<DialogConversation id={0}/>}/>\n    //                         <Route path=\"/dialogs/1\" element={<DialogConversation id={1}/>}/>\n    //                         <Route path=\"/dialogs/2\" element={<DialogConversation id={2}/>}/>\n    //                         <Route path=\"/dialogs/3\" element={<DialogConversation id={3}/>}/>\n    //                         <Route path=\"/agreement\" element={<LicenseAgreement/>}/>\n    //                         <Route path=\"/items\" element={<Items/>}/>\n    //                     </Routes>\n    //                     <Footer/>\n    //                 </BrowserRouter>\n    //             </Provider>\n    //         </header>\n    //     </div>\n    // );\n}\n\n// function App() {\n//     const [examples, setExamples] = useState(true);\n//\n//     const { token, setToken } = useToken();\n//\n//     useLayoutEffect(() => {\n//         getExamples();\n//     });\n//\n//     function getExamples() {\n//         fetch('http://localhost:8083/api/examples/', {\n//             headers: {\n//                 'Authorization': token\n//             }\n//         })\n//             .then(response => {\n//                 return response.text();\n//             })\n//             .then(data => {\n//                 setExamples(data);\n//             });\n//     }\n//\n//     function createExample() {\n//         let exampleText = prompt('Enter text');\n//         fetch('http://localhost:8083/api/examples/', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': token\n//             },\n//             body: JSON.stringify({exampleText}),\n//         })\n//             .then(response => {\n//                 return response.text();\n//             })\n//             .then(data => {\n//                 alert(data);\n//                 getExamples();\n//             });\n//     }\n//\n//     function deleteExample() {\n//         let id = prompt('Enter example ID');\n//         fetch(`http://localhost:8083/api/examples/${id}`, {\n//             method: 'DELETE',\n//             headers: {\n//                 'Authorization': token\n//             }\n//         })\n//             .then(response => {\n//                 return response.text();\n//             })\n//             .then(data => {\n//                 alert(data);\n//                 getExamples();\n//             });\n//     }\n//\n//     function updateExample() {\n//         let id = prompt('Enter example ID');\n//         let exampleText = prompt('Enter new text');\n//         fetch('http://localhost:8083/api/examples/', {\n//             method: 'PUT',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Authorization': token\n//             },\n//             body: JSON.stringify({\n//                 id,\n//                 exampleText\n//             }),\n//         })\n//             .then(response => {\n//                 return response.text();\n//             })\n//             .then(data => {\n//                 alert(data);\n//                 getExamples();\n//             });\n//     }\n//\n//\n//     if(!token) {\n//         return <Login setToken={setToken}/>\n//     }\n//\n//     return (\n//\n//         <div>\n//\n//\n//             {/*<table>*/}\n//             {/*  <thead>*/}\n//             {/*    <tr>*/}\n//             {/*      <th>Id</th>*/}\n//             {/*      <th>Text</th>*/}\n//             {/*    </tr>*/}\n//             {/*  </thead>*/}\n//             {/*  <tbody>*/}\n//             {/*    {JSON.parse(examples).map(item =>*/}\n//             {/*      <tr>*/}\n//             {/*        <td>{item.id}</td>*/}\n//             {/*        <td>{item.exampleText}</td>*/}\n//             {/*      </tr>)}*/}\n//             {/*  </tbody>*/}\n//             {/*</table>*/}\n//             {examples}\n//             <br />\n//             <button onClick={createExample}>Add example</button>\n//             <br />\n//             <button onClick={deleteExample}>Delete example</button>\n//             <br />\n//             <button onClick={updateExample}>Update example</button>\n//         </div>\n//     );\n// }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}